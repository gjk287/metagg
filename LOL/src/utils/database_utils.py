import pandas as pd

def func_extend_idToValue(self, matching_dict, row):
	length = len(list(matching_dict['idToValue'].values())[0])
	temp_list = []
	for i in range(length):
		temp_list.append(matching_dict['idToValue'][row][i])
	return pd.Series(temp_list)



tableUniqueKey = {
			'league':['league_name'],
			'team':['team_name'],
			'player':['player_name'],
			'champion':['champion_name'],
			'betting_site':['betting_site'],
			'match':['league_id', 'year', 'season', 'date', 'home_team_id', 'away_team_id', 'tiebreaker', 'match_round'],
			'match_info_by_team':['match_id', 'team_id'],
			'set_match':['match_id', 'set_number'],
			'set_match_info_by_team':['set_match_id', 'team_id'],
			'odds_by_match':['match_id', 'betting_site_id', 'bet_type', 'bet_id', 'saved_time'],
			'odds_by_set_match':['set_match_id', 'betting_site_id', 'bet_type', 'bet_id', 'saved_time'],
			'odds_by_match_info':['match_info_by_team_id', 'betting_site_id', 'bet_type', 'bet_id', 'saved_time'],
			'odds_by_set_match_info':['set_match_info_by_team_id', 'betting_site_id', 'bet_type', 'bet_id', 'saved_time'],
			'bet_type_special':['bet_name'],
			'bet_type_ou':['bet_name', 'threshold', 'over_under'],
			'bet_type_both':['bet_name', 'yes_no'],
			'bet_type_handicap':['bet_name', 'handicap_amount'],
			'set_match_player_performance':['set_match_info_by_team_id', 'player_id'],
			'set_match_url':['set_match_id'],
			'summoner': ['summoner_name'],
			'region': ['region_name'],
			'api': ['api_key'],
			'player_summoner': ['player_id', 'summoner_id'],
			'amateur_match': ['match_id'],
			'spell': ['spell_name'],
			'item': ['item_name'],
			'amateur_match_participant_stats': ['amateur_match_by_team_id', 'summoner_id'],
			'amateur_match_by_team': ['amateur_match_id', 'side'],
			'amateur_match_participant_timeline_stats': ['amateur_match_participant_stats_id', 'stats_name', 'time_between'],
			'amateur_match_participant_timeline_info': ['amateur_match_participant_stats_id', 'timestamp'],
			'timeline_event_item': ['amateur_match_participant_stats_id', 'timestamp', 'event_type', 'item_id'],
			'timeline_event_skill_level': ['amateur_match_participant_stats_id', 'timestamp'],
			'timeline_event_ward': ['amateur_match_participant_stats_id', 'timestamp', 'event_type', 'ward_type'],
			'timeline_event_building': ['amateur_match_participant_stats_id', 'timestamp', 'building_type', 'tower_type', 'lane_type'],
			'timeline_event_champion_kill': ['amateur_match_participant_stats_id', 'timestamp'],
			'timeline_event_champion_assist': ['amateur_match_participant_stats_id', 'timestamp'],
			'timeline_event_champion_death': ['amateur_match_participant_stats_id', 'timestamp'],
			'timeline_event_elite_monster': ['amateur_match_participant_stats_id', 'timestamp']
		}
tableFK_dict = {
			'league':{},
			'team':{},
			'player':{},
			'champion':{},
			'betting_site':{},
			'match':{('league_id', 'home_team_id', 'away_team_id'): ('league', 'team', 'team')},
			'match_info_by_team':{('match_id', 'team_id'): ('match', 'team')},
			'set_match':{('match_id'): ('match')},
			'set_match_info_by_team':{('set_match_id', 'team_id', 'top_player_id', 'jg_player_id', 'mid_player_id', 'bot_player_id', 'sup_player_id', 'ban1_id', 'ban2_id', 'ban3_id', 'ban4_id', 'ban5_id'): ('set_match', 'team', 'player', 'player', 'player', 'player', 'player', 'champion', 'champion', 'champion', 'champion', 'champion')},
			'odds_by_match':{('match_id', 'betting_site_id'): ('match', 'betting_site')},
			'odds_by_set_match':{('set_match_id', 'betting_site_id'): ('set_match', 'betting_site')},
			'odds_by_match_info':{('match_info_by_team_id', 'betting_site_id'):('match_info_by_team', 'betting_site')},
			'odds_by_set_match_info':{('set_match_info_by_team_id', 'betting_site_id'):('set_match_info_by_team', 'betting_site')},
			'bet_type_special':{},
			'bet_type_ou':{},
			'bet_type_both':{},
			'bet_type_handicap':{},
			'set_match_player_performance':{('set_match_info_by_team_id', 'player_id', 'champion_id'): ('set_match_info_by_team', 'player', 'champion')},
			'set_match_url':{('set_match_id'):('set_match')},
			'summoner':{('region_id', 'api_id'):('region', 'api')},
			'region':{},
			'api':{},
			'player_summoner':{('player_id', 'summoner_id'):('player', 'summoner')},
			'amateur_match':{},
			'spell':{},
			'item':{},
			'amateur_match_participant_timeline_stats':{('amateur_match_participant_stats_id'):('amateur_match_participant_stats')},
			'amateur_match_participant_stats':{('amateur_match_by_team_id', 'summoner_id', 'spell1', 'spell2', 'item1', 'item2', 'item3', 'item4', 'item5',
				'item6', 'item7'):('amateur_match_by_team', 'summoner', 'spell', 'spell', 'item', 'item', 'item', 'item', 'item', 'item', 'item')},
			'amateur_match_by_team':{('amateur_match_id', 'ban1_id', 'ban2_id', 'ban3_id', 'ban4_id', 'ban5_id', 'participant1_id', 'participant2_id', 'participant3_id', 
				'participant4_id', 'participant5_id'):('amateur_match', 'champion', 'champion', 'champion', 'champion', 'champion', 'summoner', 'summoner', 'summoner', 'summoner', 'summoner')},
			'amateur_match_participant_timeline_info':{('amateur_match_participant_stats_id'):('amateur_match_participant_stats')},
			'timeline_event_item':{('amateur_match_participant_stats_id'):('amateur_match_participant_stats')},
			'timeline_event_skill_level':{('amateur_match_participant_stats_id'):('amateur_match_participant_stats')},
			'timeline_event_ward':{('amateur_match_participant_stats_id'):('amateur_match_participant_stats')},
			'timeline_event_building':{('amateur_match_participant_stats_id'):('amateur_match_participant_stats')},
			'timeline_event_champion_kill':{('amateur_match_participant_stats_id'):('amateur_match_participant_stats')},
			'timeline_event_champion_assist':{('amateur_match_participant_stats_id'):('amateur_match_participant_stats')},
			'timeline_event_champion_death':{('amateur_match_participant_stats_id'):('amateur_match_participant_stats')},
			'timeline_event_elite_monster':{('amateur_match_participant_stats_id'):('amateur_match_participant_stats')}
		}

tablePK_dict = {
			'league':'league_id',
			'team':'team_id',
			'player':'player_id',
			'champion':'champion_id',
			'betting_site':'betting_site_id',
			'match':'match_id',
			'match_info_by_team':'match_info_by_team_id',
			'set_match':'set_match_id',
			'set_match_info_by_team':'set_match_info_by_team_id',
			'odds_by_match':'odds_by_match_id',
			'odds_by_set_match':'odds_by_set_match_id',
			'odds_by_match_info':'odds_by_match_info_id',
			'odds_by_set_match_info':'odds_by_set_match_info_id',
			'bet_type_special':'bet_id',
			'bet_type_ou':'bet_id',
			'bet_type_both':'bet_id',
			'bet_type_handicap':'bet_id',
			'set_match_player_performance':'set_match_player_performance_id',
			'set_match_url':'set_match_url_id',
			'summoner':'summoner_id',
			'region':'region_id',
			'api':'api_id',
			'player_summoner':'player_summoner_id',
			'amateur_match':'amateur_match_id',
			'spell':'spell_id',
			'item':'item_id',
			'amateur_match_participant_timeline_stats':'amateur_match_participant_timeline_stats_id',
			'amateur_match_participant_stats':'amateur_match_participant_stats_id',
			'amateur_match_by_team':'amateur_match_by_team_id',
			'amateur_match_participant_timeline_info':'amateur_match_participant_timeline_info_id',
			'timeline_event_item':'timeline_event_item_id',
			'timeline_event_skill_level':'timeline_event_skill_level_id',
			'timeline_event_ward':'timeline_event_ward_id',
			'timeline_event_building':'timeline_event_building_id',
			'timeline_event_champion_kill':'timeline_event_champion_kill_id',
			'timeline_event_champion_assist':'timeline_event_champion_assist_id',
			'timeline_event_champion_death':'timeline_event_champion_death_id',
			'timeline_event_elite_monster':'timeline_event_elite_monster_id'
		}